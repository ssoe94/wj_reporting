name: API Smoke Test

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  smoke-test:
    name: API JSON Response Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Wait for deployment (if triggered by push)
        if: github.event_name == 'push'
        run: |
          echo "Waiting 60 seconds for Render deployment..."
          sleep 60
      
      - name: Test Health Endpoint (JSON)
        run: |
          echo "Testing /api/health/ endpoint..."
          CONTENT_TYPE=$(curl -sI https://wj-reporting.onrender.com/api/health/ | grep -i content-type | awk '{print $2}' | tr -d '\r')
          echo "Content-Type: $CONTENT_TYPE"
          
          if [[ ! "$CONTENT_TYPE" =~ "application/json" ]]; then
            echo "❌ FAIL: Expected application/json, got $CONTENT_TYPE"
            exit 1
          fi
          echo "✅ PASS: Health endpoint returns JSON"
      
      - name: Test Reports Summary (JSON)
        run: |
          echo "Testing /api/injection/reports/summary/ endpoint..."
          RESPONSE=$(curl -s -w "\n%{http_code}\n%{content_type}" \
            "https://wj-reporting.onrender.com/api/injection/reports/summary/?date=2025-10-14")
          
          STATUS=$(echo "$RESPONSE" | tail -n 2 | head -n 1)
          CONTENT_TYPE=$(echo "$RESPONSE" | tail -n 1)
          BODY=$(echo "$RESPONSE" | head -n -2)
          
          echo "Status: $STATUS"
          echo "Content-Type: $CONTENT_TYPE"
          
          # Check if response is HTML (proxy failure)
          if [[ "$BODY" =~ "<html" ]] || [[ "$BODY" =~ "<!DOCTYPE" ]]; then
            echo "❌ FAIL: Received HTML instead of JSON"
            echo "Body preview: ${BODY:0:200}"
            exit 1
          fi
          
          # Check content type
          if [[ ! "$CONTENT_TYPE" =~ "application/json" ]]; then
            echo "❌ FAIL: Expected application/json, got $CONTENT_TYPE"
            exit 1
          fi
          
          echo "✅ PASS: Reports endpoint returns JSON"
      
      - name: Test 404 Returns JSON
        run: |
          echo "Testing 404 error response format..."
          RESPONSE=$(curl -s -w "\n%{http_code}\n%{content_type}" \
            "https://wj-reporting.onrender.com/api/_404_check_nonexistent")
          
          STATUS=$(echo "$RESPONSE" | tail -n 2 | head -n 1)
          CONTENT_TYPE=$(echo "$RESPONSE" | tail -n 1)
          BODY=$(echo "$RESPONSE" | head -n -2)
          
          echo "Status: $STATUS"
          echo "Content-Type: $CONTENT_TYPE"
          
          # Should be 404
          if [ "$STATUS" != "404" ]; then
            echo "⚠️  WARNING: Expected 404, got $STATUS"
          fi
          
          # Should be JSON, not HTML
          if [[ "$BODY" =~ "<html" ]] || [[ "$BODY" =~ "<!DOCTYPE" ]]; then
            echo "❌ FAIL: 404 returns HTML instead of JSON"
            echo "Body preview: ${BODY:0:200}"
            exit 1
          fi
          
          if [[ ! "$CONTENT_TYPE" =~ "application/json" ]]; then
            echo "❌ FAIL: 404 should return JSON, got $CONTENT_TYPE"
            exit 1
          fi
          
          echo "✅ PASS: 404 errors return JSON"
      
      - name: Test Backend Direct
        run: |
          echo "Testing backend direct access..."
          CONTENT_TYPE=$(curl -sI https://wj-reporting-backend.onrender.com/api/health/ \
            | grep -i content-type | awk '{print $2}' | tr -d '\r')
          echo "Backend Content-Type: $CONTENT_TYPE"
          
          if [[ ! "$CONTENT_TYPE" =~ "application/json" ]]; then
            echo "❌ FAIL: Backend should return JSON"
            exit 1
          fi
          echo "✅ PASS: Backend returns JSON"
      
      - name: Summary
        if: always()
        run: |
          echo ""
          echo "========================================="
          echo "API Smoke Test Summary"
          echo "========================================="
          echo "All critical endpoints validated for:"
          echo "  ✓ JSON content-type"
          echo "  ✓ No HTML responses"
          echo "  ✓ Proper error handling"
          echo "========================================="
