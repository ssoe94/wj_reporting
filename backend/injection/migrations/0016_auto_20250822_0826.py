# Generated by Django 5.2.3 on 2025-08-22 00:26

from django.db import migrations
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType


def create_user_profiles_and_groups(apps, schema_editor):
    """기존 사용자들에게 UserProfile 생성 및 그룹 설정"""
    User = apps.get_model('auth', 'User')
    UserProfile = apps.get_model('injection', 'UserProfile')
    InjectionReport = apps.get_model('injection', 'InjectionReport')
    Product = apps.get_model('injection', 'Product')
    PartSpec = apps.get_model('injection', 'PartSpec')
    EngineeringChangeOrder = apps.get_model('injection', 'EngineeringChangeOrder')
    
    # 1. 기존 사용자들에게 UserProfile 생성
    for user in User.objects.all():
        if not hasattr(user, 'profile') or not UserProfile.objects.filter(user=user).exists():
            UserProfile.objects.create(
                user=user,
                # 관리자가 아닌 경우 기본 조회 권한 부여
                can_view_injection=not user.is_staff,
                can_view_eco=not user.is_staff,
            )
    
    # 2. 그룹 생성 및 권한 설정
    editor_group, created = Group.objects.get_or_create(name='editor')
    viewer_group, created = Group.objects.get_or_create(name='viewer')
    
    # 모델별 권한 설정
    models = [InjectionReport, Product, PartSpec, EngineeringChangeOrder]
    
    for model in models:
        content_type = ContentType.objects.get_for_model(model)
        permissions = Permission.objects.filter(content_type=content_type)
        
        # 편집자 권한: 조회, 추가, 변경, 삭제
        for perm in permissions:
            editor_group.permissions.add(perm)
        
        # 조회자 권한: 조회만
        view_permissions = permissions.filter(codename__startswith='view_')
        for perm in view_permissions:
            viewer_group.permissions.add(perm)


def reverse_user_profiles_and_groups(apps, schema_editor):
    """역방향 마이그레이션 - 필요시 그룹 삭제"""
    Group = apps.get_model('auth', 'Group')
    Group.objects.filter(name__in=['editor', 'viewer']).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('injection', '0015_userprofile'),
    ]

    operations = [
        migrations.RunPython(
            create_user_profiles_and_groups,
            reverse_user_profiles_and_groups
        ),
    ]
